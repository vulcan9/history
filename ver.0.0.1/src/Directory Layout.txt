
프로젝트
-------------
core/Space.js
core/ExtendSpace.js
core/core.css
core/core.html

drag&drop
-------------
http://threedubmedia.com/code/event/drag
http://threedubmedia.com/code/event/drop

-----------------------------------------------------------------------------

angular doc
https://docs.angularjs.org/api

Angular.js는 왜 좋은가?
http://blog.outsider.ne.kr/975

Angular.js에서 HTML 구조없이 컨트롤러 상속받기
http://blog.outsider.ne.kr/981

Angular.js 어플리케이션에서 anchor의 해쉬 사용
http://blog.outsider.ne.kr/982

/*
[sublime : legacy] 

* themeDemo
- https://sublime.wbond.net/packages/Dayle%20Rees%20Color%20Schemes
- http://daylerees.github.io/

* liveload
- http://demun.tistory.com/2345
- <script>document.write('<script src="http://' + (location.host || 'localhost').split(':')[0] + ':35729/livereload.js?snipver=1"></' + 'script>')</script>

{
    "color_scheme": "Packages/Dayle Rees Color Schemes/sublime/legacy.tmTheme",
    "fade_fold_buttons": false,
    "font_face": "돋움",
    "font_size": 10,
    // Additional spacing at the top of each line, in pixels
    "line_padding_top": 1,
    // Additional spacing at the bottom of each line, in pixels
    "line_padding_bottom": 1,
    "ignored_packages":
    [
        "Vintage"
    ],
    "soda_classic_tabs": false,
    "soda_folder_icons": false,
    "tab_size": 4,
    "theme": "Soda Dark.sublime-theme",
    "translate_tabs_to_spaces": true
}



-----------------------------------------------------------------------------

[참고]
AngularJS 와 RequireJS 를 활용한 대규모 웹 어플리케이션 개발
http://jcf.daewoobrenic.co.kr/blog/?p=237
http://programmingsummaries.tistory.com/229
https://github.com/angular/angular-seed
 */

// 실행 순서

1. index.html
<script data-main="js/main" src="http://cdnjs.cloudflare.com/ajax/libs/require.js/2.1.14/require.min.js"></script>

2. main.js
- require config 설정 및 디펜던시 로드

3. app.js 로드 및 실행 (main.js 디펜던시에서)
- app.js : [angular, route-config] 먼저 로드됨
- route-config.js : [lazyDirectives, lazyServices, lazyFilters] 먼저 로드됨
- App 모듈 선언, CommonController 선언

4. routes.js 로드 및 실행 (main.js 디펜던시에서)
- app.config 실행 (라우터 경로 설정)

5. main.js 실행
- angular.bootstrap (App 모듈 시작)
- 설정된 라우터 경로대로 view, controller 로드


// 페이지 추가 절차
 1. Routes.js 에서 해쉬에 해당하는 경로 추가 후 template과 해당 controller 경로를 설정 한다.
 2. 또한, 필요한 directive, service, filter가 있다면 경로를 설정한다.
 3. template에는 controller가 기술되어 있다.
 4. controller를 작성한다.





-----------------------------------------------------------------------------

// X-editable (팝업 속성 편집 도구)
http://vitalets.github.io/x-editable/
http://vitalets.github.io/angular-xeditable/

// 부트 스트랩 (BS3)
http://getbootstrap.com/
http://getbootstrap.com/components/
http://bootstrapk.com/BS3/